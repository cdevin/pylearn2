!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.icml07.RectanglesImage {
        which_set: "train",
        one_hot: 1
    },
    model: !obj:galatea.dbm.inpaint.super_dbm.SuperDBM {
        inference_procedure: !obj:galatea.dbm.inpaint.super_dbm.MoreConsistent {},
              batch_size : 100,
              niter: 15,
              visible_layer: &vis !obj:galatea.dbm.inpaint.super_dbm.GaussianVisLayer {
                nvis: 784,
                bias_from_marginals: *train,
                init_beta: !obj:pylearn2.models.mlp.beta_from_features { dataset: *train , min_var: .01 }
              },
              hidden_layers: [
                !obj:galatea.dbm.inpaint.super_dbm.BVMP_Gaussian {
                    center: 0,
                    input_layer: *vis,
                        max_col_norm: .2,
                        detector_layer_dim: %(layer0_dim)i,
                        pool_size: 1,
                        irange: .001,
                        layer_name: 'h0'
               },
                !obj:galatea.dbm.inpaint.super_dbm.DenseMaxPool {
                    center: 0,
                        max_col_norm: 3.666304,
                        detector_layer_dim: %(layer1_dim)i,
                        pool_size: 1,
                        sparse_init: 23,
                        layer_name: 'h1',
                        init_bias: -0.393587
               },
               !obj:galatea.dbm.inpaint.super_dbm.Softmax {
                    center: 0,
                        max_col_norm: 5.175683,
                        sparse_init: 23,
                        layer_name: 'c',
                        n_classes: 2
               }
              ]
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        monitoring_dataset : {
           'valid': !obj:pylearn2.datasets.icml07.RectanglesImage {
                which_set: "valid",
                one_hot: 1
            },
        },
        learning_rate: %(learning_rate)f,
        init_momentum: .5,
        cost: !obj:pylearn2.costs.cost.SumOfCosts {
           costs :[
                       !obj:galatea.dbm.inpaint.super_inpaint.SuperInpaint {
                           monitor_multi_inference: 1,
                          both_directions: 0,
                          noise: %(noise)i,
                           supervised: 1,
                           mask_gen: !obj:galatea.dbm.inpaint.super_inpaint.MaskGen {
                               drop_prob: %(drop_prob)f,
                               drop_prob_y: 0.5,
                               balance: 0,
                               sync_channels: 0
                            }
                       }
                       ]
               },
               termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased
               {
                        channel_name: "valid_err",
                        N: 100,
                        prop_decrease: 0.
               }
        },
    extensions: [
                !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
                        channel_name: "valid_err",
                        save_path: "%(save_path)sbest.pkl"
                },
                !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
                    start: 1,
                    saturate: %(m_saturate)i,
                    final_momentum: 0.732716
                },
                !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
                    start: 1,
                    saturate: %(lr_saturate)i,
                    decay_factor: %(decay_factor)f,
                }
        ],
    save_path: "%(save_path)slast.pkl",
    save_freq : 1
}
