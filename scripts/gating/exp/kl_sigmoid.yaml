!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.mnist.MNIST {
        which_set: 'train',
        one_hot: 1,
        start: 0,
        stop: 50000
    },
    model: !obj:noisy_encoder.scripts.gating.Gated_MLP {
        layers: [
                 !obj:noisy_encoder.scripts.gating.MLP_GatedRectifier {
                     layer_name: 'h0',
                     num_units: &h0_units %(h0_units)i,
                     num_pieces: &h0_pieces %(h0_pieces)i,
                     irange: .005,
                     max_col_norm: 1.9365,
                     selection_type: 'one_hot_sigmoid',
                     sparsity_type: 'kl',
                     sparsity_ratio: %(sparsity_ratio_0)f,
                     sparsity_momentum: %(sparsity_momentum_0)f,
                     gater: !obj:pylearn2.models.mlp.MLP {
                            layers: [
                                !obj:pylearn2.models.mlp.RectifiedLinear {
                                    layer_name: 'h0.h0',
                                    dim: 200,
                                    max_col_norm: 2,
                                    irange: .005
                                },
                                !obj:pylearn2.models.mlp.RectifiedLinear {
                                    layer_name: 'h0.h1',
                                    dim: 200,
                                    max_col_norm: 2,
                                    irange: .005
                                },
                                 !obj:pylearn2.models.mlp.Sigmoid {
                                     max_col_norm: 1.9365,
                                     layer_name: 'y',
                                     dim: *h0_pieces,
                                     irange: .005
                                 }
                            ],
                            nvis: 784
                        }
                 },
                 !obj:noisy_encoder.scripts.gating.MLP_GatedRectifier {
                     layer_name: 'h1',
                     num_units: %(h1_units)i,
                     num_pieces: &h1_pieces %(h1_pieces)i,
                     irange: .005,
                     max_col_norm: 1.9365,
                     selection_type: 'one_hot_sigmoid',
                     sparsity_type: 'kl',
                     sparsity_ratio: %(sparsity_ratio_1)f,
                     sparsity_momentum: %(sparsity_momentum_1)f,
                     gater: !obj:pylearn2.models.mlp.MLP {
                            layers: [
                                !obj:pylearn2.models.mlp.RectifiedLinear {
                                    layer_name: 'h1.h0',
                                    dim: 200,
                                    max_col_norm: 2,
                                    irange: .005
                                },
                                !obj:pylearn2.models.mlp.RectifiedLinear {
                                    layer_name: 'h1.h1',
                                    dim: 200,
                                    max_col_norm: 2,
                                    irange: .005
                                },
                                 !obj:pylearn2.models.mlp.Sigmoid {
                                     max_col_norm: 1.9365,
                                     layer_name: 'y',
                                     dim: *h1_pieces,
                                     irange: .005
                                 }
                            ],
                            nvis: *h0_units
                     }
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 10,
                     irange: .005
                 }
                ],
        nvis: 784,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: %(learning_rate)f,
        init_momentum: .5,
        monitoring_dataset:
            {
                #'train' : *train,
                'valid' : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'train',
                              one_hot: 1,
                              start: 50000,
                              stop:  60000
                          },
                'test'  : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'test',
                              one_hot: 1,
                          }
            },
        cost: !obj:pylearn2.costs.cost.SumOfCosts {
            costs: [
                !obj:pylearn2.costs.mlp.dropout.Dropout {
                    input_include_probs: { 'h0' : .8 },
                    input_scales: { 'h0': 1. }
                },
                [0.1, !obj:pylearn2.costs.cost.MethodCost {
                    method: 'cost_sparsity'
                }],
            ]
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 100
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "%(save_path)sbest.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .7
        },
        !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
            start: 1,
            saturate: 250,
            decay_factor: %(decay_factor)f
        },
        !obj:noisy_encoder.utils.best_params.MonitorBasedBest {
            channel_name: 'valid_y_misclass',
            save_channel_names: ['valid_y_misclass'],
        },
    ],
    save_path: "%(save_path)slast.pkl",
    save_freq: 100
}
