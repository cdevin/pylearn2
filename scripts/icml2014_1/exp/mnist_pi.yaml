!obj:pylearn2.train.Train {
    dataset: &train !obj:noisy_encoder.scripts.icml2014_1.tfd.MyTFD {
        which_set: 'train',
        one_hot: 1,
    },
    model: !obj:noisy_encoder.scripts.icml2014_1.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h0',
                     num_units: 240,
                     num_pieces: 5,
                     irange: .005,
                     max_col_norm: 1.9365,
                 },
                 !obj:noisy_encoder.scripts.icml2014_1.maxout.Maxout2 {
                     layer_name: 'h1',
                     num_units: 240,
                     num_pieces: 5,
                     irange: .005,
                     max_col_norm: 1.9365,
                 },
                [
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y1',
                     n_classes: 7,
                     irange: .005
                 },
                !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y2',
                     n_classes: 7,
                     irange: .005
                 }]
                ],
        nvis: 2304,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .1,
        init_momentum: .5,
        monitoring_dataset:
            {
                'valid' : !obj:noisy_encoder.scripts.icml2014_1.tfd.MyTFD {
                              which_set: 'valid',
                              one_hot: 1
                          },
            },
        cost: !obj:noisy_encoder.scripts.icml2014_1.dropout.Dropout {
            input_include_probs: { 'h0' : .8 },
            input_scales: { 'h0': 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 100
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.000004,
            min_lr: .000001
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .7
        }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
